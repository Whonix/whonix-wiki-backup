{{Header}}
{{title|title=
Existing Ports of and Porting {{project_name_long}} to other Architectures
}}
{{#seo:
|description=Architecture specific packages in {{project_name_long}}. "Special packages". Software maintained by third parties. Compiled software. Kernel modules. Shared objects. Tips on porting {{project_name_long}} to other platforms. "amd64" means Intel and AMD. Porting Simplicity.
}}
= Existing Ports of {{project_name_long}} =

* [https://wiki.raptorcs.com/wiki/Whonix {{Whonix}} reported] to be running on POWER9 ([https://wiki.raptorcs.com/wiki/OpenPOWER OpenPOWER]), [https://wiki.raptorcs.com/wiki/Main_Page Raptor] [https://wiki.raptorcs.com/wiki/Talos_II Talos II] using [[Dev/Installation_from_Repository|distro-morphing]].
* Inoffical {{project name long}} Docker port. Not reviwed by {{project name long}} developers.
** https://forums.whonix.org/t/running-whonix-on-kvm-in-linux-containers/14048
** https://github.com/nspin/whonix-now
* Some other {{project name long}} on github. Docker ports of on github.

= Incomplete Ports of {{project_name_long}} =

* [https://forums.whonix.org/t/whonix-for-arm64-raspberry-pi-rpi/1788 Whonix for <code>arm64</code> / Raspberry Pi ( RPi )] ([[Dev/Build_Documentation/Physical_Isolation#How_To_Install_Whonix-Gateway_.E2.84.A2_on_the_Raspberry_Pi_3_B_.28RPI3.29|wiki]]) (broken, [[unsupported]])
* Whonix on <code>Mac</code> <code>M1</code> (<code>ARM</code>) based: [[MacOS#M1|project status]] / [https://forums.whonix.org/t/whonix-on-mac-m1-arm/11310 forum discussion]

= Existing Ports of {{kicksecure}} =

* <code>ppc64el</code> {{kicksecure}} functional, created using distro-morphing on a test server for {{project_name_long}} developer Patrick.
* Distro-morphing should generate viable images for KVM on <code>arm64</code>.

= Packages =
== NOTE ==
{{Amd64}}

== Porting Simplicity ==
To simplify ports to other architectures, all of the following packages are optional dependencies. These packages have very useful functionality however to simplify bootstrapping a port of {{project_name_long}} for a quick motivational milestone to reach of {{project_name_long}} building and booting, all architecture specific packages are optional dependencies by design in {{project_name_long}}.

Therefore porters do not need to worry about any of the following packages during original porting work.

Most of {{project_name_long}} packages and all essential packages are architecture independent.

To simplify ports, {{project_name_long}} repository at time of writing supports the following architectures. <ref>
* https://github.com/{{project_name_short}}/blob/master/aptrepo_remote/conf/distributions#L7
* https://github.com/{{project_name_short}}/blob/master/aptrepo_local/conf/distributions#L7
</ref>

amd64 arm64 armel armhf hurd-i386 hurd-amd64 i386 kfreebsd-amd64 kfreebsd-i386 mips mipsel powerpc ppc64 ppc64el s390x sparc source

This might be useful for [[Dev/Installation_from_Repository|distro-morphing]].

Distro-morphing might be the easiest way to create a proof of concept port of {{project_name_long}}. Following the spirit of [[Support#Free_Support_Principle|Free Support Principle]], first experimenting with Debian (which {{project_name_long}} is based on) first might be helpful.

A production quality, redistributable port of {{project_name_long}} however should be created using {{project_name_long}} build script instead of distro-morphing.

== bindp ==
* maintained by third party: yes
* compiled: yes
* compiled when: at package installation time / at {{project name long}} build time
* language: C
* no upstream version number
* documentation: none
* upstream: https://github.com/yongboy/bindp
* package source code: https://github.com/Kicksecure/bindp
* kernel module: no

== lkrg ==
* maintained by third party: yes
* compiled: yes
* compiled when: at package installation time / at {{project name long}} build time (if it was pre-installed)
* language: C
* version number by upstream: yes
* upstream architecture support: <code>amd64</code> only
* documentation: [[Linux_Kernel_Runtime_Guard_LKRG|Linux Kernel Runtime Guard (LKRG)]]
* upstream: https://lkrg.org/
* Debian package source code: https://github.com/Kicksecure/lkrg
* kernel module: yes
* [https://forums.whonix.org/t/linux-kernel-runtime-guard-lkrg-linux-kernel-runtime-integrity-checking-and-exploit-detection/8477 LKRG Development Discussion]

== kloak ==
* maintained by third party: yes
* compiled: yes
* compiled when: during package build process / at {{project name long}} build time
* version number by upstream: yes
* architecture support: ?
** https://github.com/vmonaco/kloak/issues/24
** https://github.com/vmonaco/kloak/issues/25
* documentation: [[Keystroke_Deanonymization#Kloak|kloak]]
* upstream: https://github.com/vmonaco/kloak
* Debian package source code: https://github.com/Whonix/kloak
* kernel module: no
* [https://forums.whonix.org/t/kloak-keystroke-anonymization-tool/7089 Kloak Forum Discussion]

== corridor ==
* maintained by third party: yes
* compiled: no
* language: sh
* version number by upstream: yes
* upstream architecture support: any
* documentation: [[Corridor]]
* upstream: https://github.com/rustybird/corridor
* Debian package source code: https://github.com/Whonix/corridor
* kernel module: no
* [https://forums.whonix.org/t/corridor-a-tor-traffic-whitelisting-gateway-a-clearnet-leak-tester/2765 corridor Development Discussion]

== Hardened Malloc ==
Hardened Memory Allocator

* maintained by third party: yes
* compiled: yes
* language: C
* compiled when: at package build time / at {{project name long}} build time (if it was pre-installed)
* version number by upstream: yes
* upstream architecture support: <code>amd64</code> only
* documentation: [[Hardened Malloc]]
* upstream: https://github.com/GrapheneOS/hardened_malloc
* Debian package source code: https://github.com/Kicksecure/hardened_malloc
* kernel module: no
* [https://forums.whonix.org/t/hardened-malloc-hardened-memory-allocator/7474 Hardened Malloc Development Discussion]
* <code>arm64</code> issue: ticket says closed but is still an issue as per this comment https://github.com/GrapheneOS/hardened_malloc/issues/149#issuecomment-1010526647

== monero-gui ==
* maintained by third party: yes
* compiled: yes
* compiled when: when upstream compiles it, the monero-gui package contains binaries aqquired from upstream (digital software signature verification is being performed during the packaging process)
* version number by upstream: yes
* upstream architecture support: <code>amd64</code> only (?)
* documentation: [[Monero]]
* upstream: https://github.com/monero-project/monero-gui
* Debian package source code: https://gitlab.com/Kicksecure/monero-gui
* kernel module: no

== tb-updater ==
* maintained by third party: no
* compiled: no
* contains binaries: no, because it is a downloader script
* language: bash
* version number by upstream: no
* architecture support:
** <code>i386</code> and <code>amd64</code>
*** For the Linux platform The Tor Project is only providing <code>i386</code> and <code>amd64</code> downloads. See https://dist.torproject.org/torbrowser/.
** <code>arm64</code> -> https://forums.whonix.org/t/arm64-tor-browser/11806
* Debian package source code: https://github.com/Kicksecure/tb-updater
* kernel module: no

== tirdad ==
* maintained by third party: yes
* compiled: yes
* compiled when: at package installation time / at {{project name long}} build time
* version number by upstream: upstream does not (yet) provide version numbers
* architecture support: <code>amd64</code> only
* documentation: TODO
* upstream: https://github.com/0xsirus/tirdad
* Debian package source code: https://github.com/Kicksecure/tirdad
* kernel module: yes
* [https://forums.whonix.org/t/tcp-secure-sn-generation-in-linux-and-its-privacy-issues-tirdad-kernel-module-for-random-isn-generation/8552 tirdad Development Discussion]

== binaries-freedom ==
* Currently not in use.

== tor ==
* Architectures <code>amd64</code>, <code>i386</code> and <code>arm64</code> are using the [https://deb.torproject.org <code>deb.torproject.org</code> <code>tor</code> package]. A newer version. The latest stable version provided by The Tor Project for the stable release of Debian. Why? See [[Dev/Tor]] and https://forums.whonix.org/t/tor-package-urgently-needs-update-to-v0-4-6-8-due-to-tor-browser-11-stable-fingerprintability/12762.
* Architectures other than <code>amd64</code>, <code>i386</code> and <code>arm64</code> are using the [https://packages.debian.org <code>packages.debian.org</code> <code>tor</code> package]. An older version. The frozen stable version provided by Debian for Debian stable. This has a disadvantage: https://forums.whonix.org/t/tor-package-urgently-needs-update-to-v0-4-6-8-due-to-tor-browser-11-stable-fingerprintability/12762
* package maintained by third party: yes
* compiled during package build process: no
* contains binaries: yes
* version number by upstream: yes

= Check Tor SocksPort Reachability =
On {{project_name_workstation_long}}. Test.
<pre>
{{Curl_Plain}} 10.152.152.10:9100 ; echo $?
</pre>

Should show.
<pre>
<html>
<head>
<title>Tor is not an HTTP Proxy</title>
</head>
<body>
<h1>Tor is not an HTTP Proxy</h1>
<p>
It appears you have configured your web browser to use Tor as an HTTP proxy.
This is not correct: Tor is a SOCKS proxy, not an HTTP proxy.
Please configure your client accordingly.
</p>
<p>
See <a href="https://www.torproject.org/documentation.html">https://www.torproject.org/documentation.html</a> for more information.
<!-- Plus this comment, to make the body response more than 512 bytes, so      IE will be willing to display it. Comment comment comment comment      comment comment comment comment comment comment comment comment.-&rarr;
</p>
</body>
</html>
0
</pre>

Otherwise, it would be a grave error (Tor SocksPort not reachable).

= Check CPFP Reachability =
On {{project_name_workstation_long}}. Test.
<pre>
{{Curl_Plain}} 10.152.152.10:9052
</pre>

Should show.

<pre>
510 Prohibited command "GET / HTTP/1.1"
510 Prohibited command "User-Agent: curl/7.26.0"
510 Prohibited command "Host: 10.152.152.10:9052"
510 Prohibited command "Accept: */*"
510 Unrecognized command ""
</pre>

Otherwise, it would be a grave error ([[Dev/onion-grater|CPFP]] not reachable).

= Forum Discussion =
https://forums.whonix.org/t/architecture-specific-compiled-third-party-special-packages-porting-whonix/8562

= RPM =
These are some random notes about porting {{project_name_long}} update debs to rpm.

What would have to be done:

* create rpm package
* Find a replacement for config-package-dev, a package which allows third party packages ({{project_name_long}}) to own files which are owned by other packages. Such as {{Code2|/etc/tor/torrc}} is owned by tor, but anon-gw-anonymizer-config includes its own config file.
* add init scripts (currently done by debhelper)
* add man pages (currently done by debhelper and ronn, see debian/rules)
* minor: replacement for dh_apparmor

= Footnotes =
{{Footer}}

[[Category:Documentation]]