{{Header}}
{{Title|title=
Multiple {{project_name_workstation_long}}
}}
{{#seo:
|description=Compartmentalization. Better separation of different tasks and/or pseudonyms by using multiple {{project_name_workstation_long}}.
|image=Petunia-14052640.jpg
}}
{{multiple-vms-mininav}}
[[image:Petunia-14052640.jpg|thumb]]
{{intro|
Compartmentalization. Better separation of different tasks and/or pseudonyms by using multiple {{project_name_workstation_long}}.
}}
= Introduction =

{{project_name_long}} is a secure operating system comprised of two virtual machines which are isolated both from each other and the host. This configuration averts many threats posed by malware, misbehaving applications and user error. While {{project_name_long}} protects against many real world threats, <ref>See: [[Whonix against Real Attacks|Protection Against Real World Attacks]].</ref> it is still possible for skilled adversaries to compromise {{project_name_workstation_long}} ([[{{q_project_name_short}}|{{q_project_name}}]]: <code>{{project_name_workstation_vm}}</code>).

If a single {{project_name_workstation_long}} is used for all anonymous activities and is exploited, the attacker gains access to available data and can monitor all online activity. To minimize the impact of a compromise, it is recommended to utilize multiple {{project_name_workstation_long}} to compartmentalize different identities and/or additional software. Depending on individual preferences and requirements, a second, third ... n<sup>th</sup> {{project_name_workstation_long}} VM can be created.

== Multiple {{project_name_workstation_long}} Rationale ==

Different torifed clients can be used in a completely isolated manner with Multiple {{project_name_workstation_long}}. By compartmentalizing each different identity or client, an attacker can only read the data in the compromised VM. For example, if Tor Browser in VM-1 was compromised it could not read a user's IRC identity in VM-2. <ref>Without using an additional exploit to successfully break out of the infected VM, which is a difficult task.</ref>

One disadvantage of this configuration is that if the host Internet connection goes offline or Tor on {{project_name_gateway_long}} (<code>{{project_name_gateway_vm}}</code>) suddenly fails, then all {{project_name_workstation_long}} will go offline simultaneously. If multiple Tor clients were running and abruptly stop in unison, a network observer could link these activities to the same person. For instance, a strong correlation is formed if two Tor users in one IRC channel go offline at exactly the same time.

== {{q_project_name}} vs {{non_q_project_name}} ==

[[Qubes|{{q_project_name}}]] is the recommended choice for multiple {{project_name_workstation_long}} because it is specifically designed for compartmentalization (a.k.a. sandboxing) of multiple running VMs. This provides significant speed and security advantages relative to the traditional Type 2 hypervisor model, where two (or more) {{project_name_long}} VMs are run inside programs like [[VirtualBox]] on top of the host OS. For further information, see: [[Virtualization_Platform_Security#Type_1_vs_Type_2_Hypervisors|Type 1 vs Type 2 Hypervisors]] and [[Qubes/Why_use_Qubes_over_other_Virtualizers|Why use Qubes over other Virtualizers?]]

{{q_project_name}} also has a TemplateBased filesystem which saves time and improves usability compared to {{non_q_project_name}}:

* <u>Centralized Updates:</u> [https://www.qubes-os.org/doc/glossary/#app-qube App Qubes] are based on the corresponding Template's root filesystem. After updating the Template, those same updates will be reflected in the root filesystem of every [https://www.qubes-os.org/doc/glossary/#app-qube App Qube]. [[{{non_q_project_name_short}}|{{non_q_project_name}}]] users must spend more time in updating each VM individually.
*  <u>Minimal Disk Usage:</u> App Qubes require far less disk space than traditional VMs since the App Qube's root filesystem is based on the corresponding template. The App Qube only requires enough disk space to hold user files in the <code>/home</code> directory.
* <u>VM Management:</u> Cloning VMs is a simple two-step process which can be done in Qube Manager. {{non_q_project_name}} requires a multi-step process to clone and configure each VM.

= Safety Precautions =

{{mbox
| image   = [[File:Ambox_warning_pn.svg.png|40px]]
| text    = While multiple {{project_name_workstation_long}} are recommended, this is <u>not</u> an endorsement for using them simultaneously!
}}

It is safest to only use one {{project_name_workstation_long}} at a time and for a single activity. New risks are introduced by running multiple {{project_name_workstation_long}} at the same time. For instance, if a single {{project_name_workstation_long}} was compromised, it could potentially perform various side channel attacks to learn about running processes in other VMs, and not all of these can be defeated. Depending on user activities, a skilled adversary might be able to correlate multiple {{project_name_workstation_long}} to the same pseudonym. Therefore, ideally, shut down all but one {{project_name_workstation_long}} before using any other {{project_name_workstation_long}}.

= Cross-VM Attack Vectors =
'''Table:''' ''Cross-VM Attack Vectors''

{| class="wikitable"
|-
! scope="col"| '''Category'''
! scope="col"| '''Description'''
|-
!- scope="row" | Attacks via the shared bridge
|
Multiple workstation VMs are all connected to the gateway using the same virtual bridge; they share an IP subnet. A variety of attacks permit devices sharing a bridge to view or steal one another's traffic, or to impersonate one another at the IP layer. The exact attacks available depend on the specific bridge implementation, but some are always available. At a minimum, VMs sharing a bridge can always trivially detect one another, and determine one another's local IP addresses on the bridge, simply by watching broadcast traffic like ARP and IPv6 neighbor discovery.

The snooping and impersonation vulnerabilities are particularly dangerous because the communication between the Tor process running on the gateway and the client programs running on the workstation is neither encrypted nor cryptographically authenticated. Connections are made either using the (cleartext) SOCKS5 protocol or using Tor's transparent connection proxying feature. Even if the actual application data are encrypted, DNS lookups and circuit creation data are always sent in the clear. A workstation VM that intercepts another workstation's bridge traffic is in a position to know the destinations of all outgoing connections over Tor from that other workstation, as well as the timing and volume of traffic sent over each such connection. It may also be possible to intercept Tor control traffic generated by the "new identity" button. If the user sends cleartext data at the actual application layer, then hostile VMs are in a position to steal those data as well.

In effect, none of the workstation VMs receives Tor's core protections with respect to the other workstation VMs. Although many things in each workstation may be protected against the other workstations, for Tor purposes all of the VMs effectively share the same compartment.

This could be mitigated by providing each workstation VM with a separate virtual bridge and a separate virtual interface on the gateway VM. The gateway configuration should also be reviewed to make sure that the gateway isn't routing unnecessary traffic between the workstations at the IP layer.

For a potential remedy see [[Connections between Gateway and Workstation|Connections between {{project_name_gateway_long}} and {{project_name_workstation_long}}]].
|-
! scope="row"| Distributed Denial of Service (DDOS) Attack
|
An adversary that managed to compromised a VM with [[Malware and Firmware Trojans|malware]] could stress any system such as CPU, GPU, HDD, RAM, network connection and other {{project_name_workstation_long}}. If a [https://en.wikipedia.org/wiki/Denial-of-service_attack Distributed Denial of Service (DDOS) Attack] is launched from an infected {{project_name_long}} VM, then:

* {{project_name_gateway_long}}:
** The {{project_name_gateway_long}} can also be DDOSed, and there is no current defense. This might bring down networking of any connected {{project_name_workstation_long}}.
* {{project_name_workstation_long}}
** <u>{{non_q_project_name}}</u>: Other {{project_name_workstation_long}} can be DDOSed. For a potential remedy see [[Connections between Gateway and Workstation|Connections between {{project_name_gateway_long}} and {{project_name_workstation_long}}]].
** <u>{{q_project_name}}</u>: Safe. <ref name=qubes-isolated />
* Potentially the host could be negatively affected as well.
|-

! scope="row"| Local VM Fingerprinting
| See [[VM Fingerprinting]].
|-

! scope="row"| Exploits against other {{project_name_gateway_long}} <ref>To minimize the threat of exploits it is recommended to apply relevant instructions found in the [[System_Hardening_Checklist|System Hardening Checklist]].</ref>
|
Following infection, an adversary could try to exploit the {{project_name_gateway_long}}.
|-

! scope="row"| Exploits against other {{project_name_workstation_long}}
| Following infection, an adversary could try to exploit other {{project_name_workstation_long}}:

* <u>{{non_q_project_name}}</u>: At risk.
* <u>{{q_project_name}}</u>: Users are safe, unless {{project_name_gateway_long}} is compromised first. <ref name=qubes-isolated />
|-

! scope="row"| Identity Correlation through Circuit Sharing
|
When different applications use the same Tor circuit and exit relay, these activities can be linked to the same pseudonym (see [[Stream Isolation]] for further details):

* <u>{{non_q_project_name}}</u>:
** If not compromised: Safe. Multiple {{project_name_workstation_long}} which have different internal IPs configured (see the instructions further below) are automatically [[Stream Isolation|stream-isolated]]. <ref>
Since [https://web.archive.org/web/20170303015402/https://www.torproject.org/docs/tor-manual.html.en IsolateClientAddr] is the Tor default.
</ref>
** If compromised: Not safe. Stream isolation might be broken through impersonating. A compromised VM could use the IP of another VM. Thereby break stream isolation. For a potential remedy see [[Connections between Gateway and Workstation|Connections between {{project_name_gateway_long}} and {{project_name_workstation_long}}]].
* <u>{{q_project_name}}</u>: Safe. <ref name=qubes-isolated />
|-

! scope="row"| Impersonation
|
Multiple {{project_name_workstation_long}} are supposed to have different internal IPs configured. Once a VM is compromised by malware it could attempt to impersonate another VM by taking its internal IP.

* <u>{{non_q_project_name}}</u>: Same as above.
* <u>{{q_project_name}}</u>: Safe. <ref name=qubes-isolated />
|-

|}

= How-to: Use more than One {{project_name_workstation_long}} - Easy =
{{Anchor|qubes}}
== {{q_project_name}} ==

* '''A)''' For using multiple {{project_name_workstation_long}} App Qubes using [[Qubes|{{q_project_name}}]], see the box below.
* '''B)''' Note, multiple {{q_project_name}} Templates instructions are different and documented on the [[Multiple Qubes-Whonix Templates|Multiple {{q_project_name}} Templates]] wiki page.

{{Box|text=
'''1.''' Create an additional App Qube based on the {{project_name_workstation_long}} Template (<code>{{project_name_workstation_template}}</code>) and give it a distinctive name such as for example <code>{{project_name_workstation_vm}}2</code>. (A more distinctive name is desirable.)

'''2.''' Confirm the new {{project_name_workstation_long}} App Qube is using a {{project_name_gateway_long}} (such as for example the default <code>{{project_name_gateway_vm}}</code>) as its [https://www.qubes-os.org/doc/glossary/#net-qube <code>net qube</code>].

If creating a new App Qube is unfamiliar, follow this link for step-by-step instructions: [[Qubes/Create_Workstation_AppVMs|Create {{project_name_long}} Workstation App Qubes]].

'''3.''' Depending on the <code>net qube</code> setting.

* '''A)''' If the {{project_name_workstation_long}} App Qube <u>is connected to <code>{{project_name_gateway_vm}}</code></u></u>: No special instructions required.
* '''B)''' If the {{project_name_workstation_long}} App Qube <u>is connected to any {{project_name_gateway_long}} other than <code>{{project_name_gateway_vm}}</code></u>, apply the following instructions. <ref>
This is non-ideal usability wise.

Sparing users from needing to change this setting requires upstream Qubes feature request [https://github.com/QubesOS/qubes-issues/issues/4117 way to find out the name of gateway from inside the VM - qubesdb-read /qubes-gateway-name] or [https://github.com/QubesOS/qubes-issues/issues/5253 qrexec feature request: send this over qrexec to the net qube I am connected to / {{project_name_gateway_vm}} hardcoded / {{project_name_gateway_vm}} unexpected autostart] to get implemented.

Technical improvement proposals:

* https://phabricator.whonix.org/T930

https://forums.whonix.org/t/sys-whonix-starting-spontaneously-after-update/8123
</ref>

{{box|text=
<u>Note:</u> Inside the {{project_name_workstation_long}} App Qube.

'''A)''' Create folder <code>/usr/local/etc/sdwdate-gui.d</code>.

{{CodeSelect|code=
sudo mkdir -p /usr/local/etc/sdwdate-gui.d
}}

'''B)''' {{Open with root rights|filename=
/usr/local/etc/sdwdate-gui.d/50_user.conf
}}

'''C)''' Add the following text.

Note: The following example uses <code>{{project_name_gateway_vm}}2</code> as an example. Replace <code>{{project_name_gateway_vm}}2</code> with the name of the VM of {{project_name_gateway_long}} which this {{project_name_workstation_long}} App Qube uses as its <code>net qube</code>. For example, <code>{{project_name_gateway_vm}}3</code>.

{{CodeSelect|code=
gateway={{project_name_gateway_vm}}2
}}

'''D.)''' Save the file.

'''E.)''' In case of issues.

sdwdate-gui qrexec denied messages? See [[Qubes/Troubleshooting#sdwdate-gui_qrexec_settings|{{q project name}} troubleshooting, sdwdate-gui qrexec]].
}}

'''4.''' Done.

The process of setting up an additional {{project_name_workstation_long}} App Qube has been completed.
}}

== {{non_q_project_name}} ==
<div class="toccolours mw-collapsible mw-collapsed">
If you are interested in this configuration, please press on Expand on the right.
<div class="mw-collapsible-content">

{{non-q-project}} Only!

{{mbox
| type    = notice
| image   = [[File:Ambox_notice.png|40px|alt=Info]]
| text    ='''Note:''' The following instructions only apply to Download/Default-{{project_name_workstation_long}} or {{project_name_long}} VMs built from source code. To use another operating system like Windows, other GNU/Linux, BSD etc. please see the [[Other Operating Systems]] chapter instead.
}}
{{mbox
| image   = [[File:Ambox_warning_pn.svg.png|40px]]
| text    = Each additional {{project_name_workstation_long}} VM <u>must</u> have its own MAC address and internal LAN IP address.
}}

{{Box|text=
'''1.''' Clone a fresh {{project_name_workstation_long}} VM.

* <u>VirtualBox</u>: In VirtualBox Manager, [https://dirkstrauss.com/clone-virtualbox-vm/ clone] a clean {{project_name_workstation_long}}.
* <u>KVM</u>: In Virtual Machine Manager, clone a clean {{project_name_workstation_long}}: <code>Highlight {{project_name_workstation_long}}</code> &rarr; <code>Open</code> &rarr; <code>Virtual Machine</code> &rarr; <code>Clone</code>

'''2.''' Assign a new MAC address to the cloned VM.

{{mbox
| type    = notice
| image   = [[File:Ambox_notice.png|40px|alt=Info]]
| text    = '''Note:''' A new MAC address is necessary if an additional [[VirtualBox]] VM is imported.
}}

* <u>VirtualBox</u>: In VirtualBox Manager, assign a new MAC address: <code>VirtualBox</code> &rarr; <code>Settings</code> &rarr; <code>Network</code> &rarr; <code>Adapter 1</code> &rarr; <code>Advanced</code> &rarr; <code>Mac Address</code> &rarr; <code>Create a new MAC address (press the green round arrow icon)</code> &rarr; <code>OK</code>
* <u>KVM</u>: To change the internal network in KVM, see: [[KVM#Creating_Multiple_Internal_Networks|Creating Multiple Internal Networks]].

'''3.''' Edit the network interfaces file in {{project_name_workstation_long}}.

{{Open with root rights|filename=
/etc/network/interfaces.d/30_non-qubes-whonix
}}

Ignore all lines starting with a hashtag ("<code>#</code>"). That is because comments are only for documentation and notes. However, comments are ignored by the system.

Look for line <code>address 10.152.152.11</code>. Change the last octet. For example, change <code>10.152.152.1'''1'''</code> to <code>10.152.152.1'''2'''</code>

Save and exit.

'''4.''' Review your changes.

The following command is optional but handy to show all file contents without comments.

{{CodeSelect|code=
cat /etc/network/interfaces.d/30_non-qubes-whonix {{!}} grep --invert-match \#
}}

That should show for example:

<pre>
auto lo
iface lo inet loopback

auto eth0
iface eth0 inet static
       address 10.152.152.12
       netmask 255.255.192.0
       gateway 10.152.152.10
</pre>

It would even be possible to replace the contents of that config file will above contents. When using more than 1 additional Whonix-Workstation however <code>10.152.152.12</code> should be changed to <code>10.152.152.13</code> and so forth.

'''5.''' Reboot.

Reboot the {{project_name_workstation_long}} or alternately restart the network.

{{CodeSelect|code=
sudo service networking restart
}}

'''6.''' Done.
}}
</div>
</div>

== How-to: Use more than One {{project_name_workstation_long}} - More Security ==

{{Anchor|Firewall}}
* [[Qubes|{{q_project_name}}]]: This step can be skipped. <ref name=qubes-isolated>
By default, App Qubes which are behind the same <code>net qube</code> are prevented from connecting to each other in Qubes.
</ref>
* [[{{non_q_project_name_short}}|{{non_q_project_name}}]]: See: [[Connections between Gateway and Workstation|Connections between {{project_name_gateway_long}} and {{project_name_workstation_long}}]].

= Multiple {{project_name_gateway_long}} =
Moved to [[Multiple Whonix-Gateway|Multiple {{project_name_gateway_long}}]].

= See Also =

{{multiple-vms-mininav}}

* [[Whonix-Workstation]]

= Footnotes =
{{reflist|close=1}}

{{Footer}}

[[Category:Documentation]]