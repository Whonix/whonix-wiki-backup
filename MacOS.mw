{{Header}} {{hide_all_banners}} {{VirtualBox_CSS}}
{{Title|title=
{{project_name_long}} for macOS: Download and Installation
}}
{{#seo:
|description={{project_name_long}} for macOS: Download and Installation
|image=logo-apple-500x500.png
}}
[[File:logo-apple-500x500.png|thumb|link=|class=hide-enlarge|100px|MacOS]]
{{intro|
{{project_name_long}} for '''Apple macOS'''

'''Select''' your hardware platform below.
}}

{{Tab
|type=controller
|content=
{{Tab
|title= === {{project_name_long}} on Intel-based MacBook ===
|addToClass=info-box
|active=true
|content=

{{mbox
|icon=fas fa-info cs-red-light
|text=
For Mac computers with an <u>Intel</u> processor, {{project_name_long}} can be run inside VirtualBox.

Follow the documentation on the '''[[VirtualBox]]''' wiki page.
}}<!-- close mbox -->
}}<!-- close tab Intel -->

{{Tab
|title= = {{project_name_long}} on Apple Silicon =
|addToClass=info-box
|content=
{{Anchor|M1}}{{Anchor|M2}}
For Mac <u>M1</u>, <u>M2</u>, ...

{{Testers-Only}}

{{mbox
| type    = notice
| image   = [[File:Ambox_notice.png|40px|alt=Info]]
| text    = At time of writing, running {{project_name_long}} on Apple Silicon is still for advanced users only!
}}<!-- close mbox -->

{{Contributor|
|status=[[Unsupported|Unmaintained]]. Development stalled.
|about=About this For {{project_name_long}} on Apple Silicon Chapter
|difficulty=hard
|contributor=Past: [https://github.com/GavinPacini Gavin Pacini] / Current: none
|support=[https://forums.whonix.org/t/whonix-on-mac-m1-arm/11310 {{project_name_long}} on Mac M1 (ARM)]
}}<!-- close box -->

'''First things first'''

* Right now, you need to build {{project_name_long}} using the build script to get it running on Apple Silicon.
* This can be improved in the future. If you want to help, please visit [https://forums.whonix.org/t/whonix-on-mac-with-arm-m1/11310 this forum thread].
* Please understand that this is only for advanced users for now!

'''1. Environment Setup'''

* download [https://github.com/utmapp/UTM/releases/latest/download/UTM.dmg UTM] and install

and follow these instructions to install your own Debian <code>arm64</code> based VM

* Debian <code>{{Stable project version based on Debian codename}}</code> netinstall disc image
* open UTM
* click "Create a new virtual machine"
* click "Virtualize"
* click "Linux"
* click "browse" and select the downloaded netinstall image iso file
* and then click "Next"
* on the "Hardware" screen just leave the defaults (4 GB RAM, 4 cores). GPU acceleration is not recommended at this time as it crashes randomly.
* and then click "Next"
* on "Storage" click "Next"
* click "Browse". Choose the directory that you want the built Whonix images to end up in.
* and then click "Next"
* verify settings on the "Summary" page and then click "Save"
* start the new VM and install linux by following the instructions on screen.
* once installation is finished boot into VM again.
* open a terminal and run <code>sudo apt install spice-vdagent spice-webdavd dosfstools</code>
* change VM hostname to <code>host</code>

Double click the utm file to import it.

'''2. Initial Build'''

Follow the [[Dev/Build_Documentation/VM| build documentation here]] and be sure to set build parameters:

* <code>--arch arm64</code> and <code>--target utm</code> when running the build script as part of the [[Dev/Build_Documentation/VM#VM_Creation]] step.
* <code>--tb open</code> will result in <code>tb-updater</code> (<code>update-torbrowser</code>) (Tor Browser Downloader by {{project_name_long}} developers) attempting to download Tor Browser during the build process but fail open (continue the build without error) should the download fail. [https://forums.whonix.org/t/arm64-tor-browser/11806/8 Previously Tor Browser download would fail.] [https://forums.whonix.org/t/arm64-tor-browser/11806/12 This might be fixed by now.] but that is OK as far as the build process is concerned.
* <code>--repo true</code> will result in [[Project-APT-Repository]] being enabled.
* <code>--vmsize</code> defines the size of the virtual hard drive.
** <code>--vmsize 15G</code> will create 15 GB disk size for the gateway.
** <code>--vmsize 25G</code> will create 25 GB disk size for the workstation.
** These numbers are arbitrarily chosen and not yet optimized. Feel free to use higher disk sizes. Lower disk sizes are ok too. In worst case, the build will fail or the disk will full up.
** It is possible to {{kicksecure_wiki
|wikipage=Grow_Virtual_Harddisk
|text=increase the virtual hard disk size later.
}}

Build commands should Look similar to:

* {{CodeSelect|code=
~/derivative-maker/derivative-maker --flavor whonix-gateway-xfce --target utm --arch arm64 --tb open --repo true --vmsize 15G
}}
* {{CodeSelect|code=
~/derivative-maker/derivative-maker --flavor whonix-workstation-xfce --target utm --arch arm64 --tb open --repo true --vmsize 25G
}}

Provided you have built correctly, you will now have two <code>.tar.gz</code> files in the <code>~/derivative-binary</code> (they will look something like <code>Whonix-<flavour>-Xfce-{{VersionNew}}.utm.tar.gz</code>), one for the Workstation and one for the Gateway.

* move the .tar.gz files into the shared folder, so they are transferred to your Mac.

'''3. Import utm files'''

* unzip the tar.gz files
* double click each utm file to import it

NOTE: The utm files are completely configured and use special networking. They will work as-is, but feel free to tweak memory, or other settings.
}}<!-- close tab Apple Silicon -->

{{Tab
|title= = {{project_name_long}} on non-Apple Hardware Hackintosh =
|addToClass=info-box
|content=
{{Community_Support|scope=chapter}}

Virtualization on osx86 aka "Hackintosh" machines with unmodified "vanilla" kernels works well, but some additional BIOS/UEFI settings need to be confirmed to ensure system stability. As of November 2018 [https://en.wikipedia.org/wiki/VT-d Intel VT-d] is not recommended, although some systems may function if it is enabled. Later BIOS revisions from American Megatrends Inc. (AMI) seem to have improved support compared to earlier releases.

[https://en.wikipedia.org/wiki/AMD-V#I/O_MMU_virtualization_(AMD-Vi_and_Intel_VT-d) AMD-Vi] is not supported, since kernel modifications violating Apple Inc.'s End User License Agreement (EULA) are required to run macOS on platforms other than Intel. It is also recommended to disable the Integrated Graphics Processing Unit (IGPU) if [https://en.wikipedia.org/wiki/PCI_Express PCIe graphics] are in use, as well as disabling any SuperIO/Serial Port options if listed in BIOS. If virtualization problems related to unsupported architectures or features are encountered, please first consult appropriate community forums and wikis available on the Internet.
}}<!-- close tab Hackintosh -->
}}<!-- close tab controller -->

= Miscellaneous macOS Advice =
<div class="toccolours mw-collapsible mw-collapsed" data-expandtext="Learn More" data-collapsetext="Show Less">
For miscellaneous advice, please press on learn more on the right.
<div class="mw-collapsible-content">
{{Community_Support|scope=chapter}}

If the same VMs will be used on multiple systems like Boot Camp or even two different physical machines, then they can be moved to a shared or external hard drive:

# Copy the VirtualBox VMs folder mentioned earlier to the new location.
# Select the VMs you moved and then click remove.
# When prompted, select "Delete files".
# Re-add the VMs from their new location by selecting <code>Machine=>Add</code>, then navigating to the new folder.

[https://en.wikipedia.org/wiki/ExFAT exFAT] is the easiest format for cross platform file sharing with Windows and Linux. exFAT is an option built into Apple's "Disk Utility.app" when initializing or reformatting a storage device. Select exFAT from the drop down menu that appears when you click "Erase". The default option is HFS+ on 10.13 "High Sierra" and earlier and APFS on 10.14 "Mojave".

Note that with its [https://en.wikipedia.org/wiki/POSIX POSIX] kernel and BSD roots, many issues that arise on macOS hosts can be addressed using strategies similar to other Unix-like OSes.
}}
</div>
</div>
= See Also =
* [[Documentation|Documentation]]
* [[Stay Tuned|Stay Tuned]]

{{reflist|close=1}}
{{Footer}}

[[Category:Documentation]]