{{Header}} {{hide_all_banners}} {{Title|title=
{{project_name_long}} for macOS: Download and Installation
}} {{#seo:
|description={{project_name_long}} for macOS: Download and Installation
|image=logo-apple-500x500.png
}} [[File:logo-apple-500x500.png|thumb|link=|class=hide-enlarge|100px|MacOS]] __NOTOC__ {{VirtualBox_CSS}}
{{intro|
{{project_name_long}} for '''Apple macOS''' inside VirtualBox (Intel Macs only, for Apple Silicon support please read section [[#M1|M1]] below).

Please follow these steps to install {{project_name_long}} Xfce.
}} <!--
WIKI EDITORS NOTE:

The format of the macOS wiki is based on the {{project_name_long}} VirtualBox wiki page.
-->
{{Box|text=
== <span class="number cs-green">1</span> Install VirtualBox ==

<u>[[VirtualBox/Recommended_Version|Recommended VirtualBox version]]: '''{{VirtualBox_Version}}'''</u>

[https://www.virtualbox.org/wiki/Downloads Download VirtualBox] by clicking on 'OS X hosts' and when prompted decide to either open or save the Apple disk image file (e.g. VirtualBox-...-OSX.dmg). After it mounts, install it by double-clicking on the blue VirtualBox logo.
}}

{{Box|text=
{{Anchor|Landing}}
== <span class="number cs-green">2</span> Download {{project_name_long}} Xfce for macOS ==

{{#widget:Download_Button
 |text=Download Whonix â„¢ Xfce (FREE)
 |url=https://download.{{project_clearnet}}/ova/{{VersionNew}}/{{project_name_short}}-XFCE-{{VersionNew}}.ova
 |os=osx
}} <span class="onion-download">[[File:Iconfinder_tor_386502.png|33px|link=http://download.{{project_onion}}/ova/{{VersionNew}}/{{project_name_short}}-XFCE-{{VersionNew}}.ova|alt=onion link]]</span>

<div class="toccolours mw-collapsible mw-collapsed">
Optional: Verify the {{project name long}} Images cryptographically.
<div class="mw-collapsible-content">
<big>Version: <span style="color: green">{{VersionNew}}</span></big>

'''Verify the {{project_name_long}} Images'''

{{always verify signatures reminder}}
{{DownloadTableUnified
|url=https://download.{{project_clearnet}}
|project={{project_name_short}}
|flavor=XFCE
|flavor_case_sensitive=Xfce
|after_slash=ova
|extension=ova
|version={{VersionNew}}
|appendix=
|signing=Verify images using this [[Signing Key|Signing Key]]
}}

{{Box|text=
{{Anchor|Verify_the_{{project_name_short}}_images}}
'''How to verify the {{project_name_long}} Images : '''
{{Verify the virtual machine images}}
}}
</div>
</div>
}}

{{Box|text=
== <span class="number cs-green">3</span> Import {{project_name_long}} into VirtualBox ==
<div class="toccolours mw-collapsible mw-collapsed">
For {{project_name_long}} VirtualBox import instructions, please press on expand on the right.
<div class="mw-collapsible-content">
'''Start VirtualBox'''
[[File:open The virtualbox1.png|1200px]]

'''Click on <u>File</u> then choose <u>Import Appliance...</u>'''

[[File:select Import Applience2.png|1200px]]

'''Navigate and select the {{project_name_long}} image and press <u>next</u>'''

[[File:select whonix image and press next3.png|1200px]]

'''Do NOT change anything! Just click on <u>Import</u>'''

[[File:press import4.png|1200px]]

'''Then press <u>Agree</u>'''

[[File:press agree5.png|1200px]]

'''Wait until {{project_name_gateway_short}}.ova has been imported'''

[[File:wait for importing6.png|1200px]]

'''Repeat the import step for {{project_name_workstation_short}}.ova'''

[[File:do the same for whonix workstation7.png|1200px]]

'''Miscellaneous'''

[[Videos|Video Tutorials]] are also available.

If you still need help, please check the [[Support|Support]] page.

After the {{project_name_long}} .ova files are imported they can be removed. VirtualBox will make a new directory with the live virtual machines {{project_name_gateway_short}}.vbox and {{project_name_workstation_short}}.vbox, and they are contained in directories of the same name. By default this is ''/Users/(yourusername)/VirtualBox VMs''
</div>
</div>
}}

{{Box|text=
== <span class="number cs-green">4</span> Start Whonix ==

Starting {{project_name_long}} is simple. Start VirtualBox, and then double-click on {{project_name_gateway_long}} and {{project_name_workstation_long}}.

'''Start both {{project_name_gateway_long}} and {{project_name_workstation_long}}'''

[[File:start both of them8.png|1200px]]
}}

{{Box|text=
'''First time user?'''
{{Default_Passwords}}
{{First_Time_User}}
}}

{{Box|text=
'''Miscellaneous macOS Advice'''
<div class="mw-collapsible-content">
If the same VMs will be used on multiple systems like Boot Camp or even two different physical machines, then they can be moved to a shared or external hard drive:

# Copy the VirtualBox VMs folder mentioned earlier to the new location.
# Select the VMs you moved and then click remove.
# When prompted, select "Delete files".
# Re-add the VMs from their new location by selecting <code>Machine=>Add</code>, then navigating to the new folder.

[https://en.wikipedia.org/wiki/ExFAT exFAT] is the easiest format for cross platform file sharing with Windows and Linux. exFAT is an option built into Apple's "Disk Utility.app" when initializing or reformatting a storage device. Select exFAT from the drop down menu that appears when you click "Erase". The default option is HFS+ on 10.13 "High Sierra" and earlier and APFS on 10.14 "Mojave".

Note that with its [https://en.wikipedia.org/wiki/POSIX POSIX] kernel and BSD roots, many issues that arise on macOS hosts can be addressed using strategies similar to other Unix-like OSes.
}}

</div>
</div>

{{Box|text=
'''Virtualization on non-Apple Hardware'''
<div class="mw-collapsible-content">
Virtualization on osx86 aka "Hackintosh" machines with unmodified "vanilla" kernels works well, but some additional BIOS/UEFI settings need to be confirmed to ensure system stability. As of November 2018 [https://en.wikipedia.org/wiki/VT-d Intel VT-d] is not recommended, although some systems may function if it is enabled. Later BIOS revisions from American Megatrends Inc. (AMI) seem to have improved support compared to earlier releases.

[https://en.wikipedia.org/wiki/AMD-V#I/O_MMU_virtualization_(AMD-Vi_and_Intel_VT-d) AMD-Vi] is not supported, since kernel modifications violating Apple Inc.'s End User License Agreement (EULA) are required to run macOS on platforms other than Intel. It is also recommended to disable the Integrated Graphics Processing Unit (IGPU) if [https://en.wikipedia.org/wiki/PCI_Express PCIe graphics] are in use, as well as disabling any SuperIO/Serial Port options if listed in BIOS. If virtualization problems related to unsupported architectures or features are encountered, please first consult appropriate community forums and wikis available on the Internet.
}}

</div>
</div>

{{anchor|M1}}
<div class="toccolours mw-collapsible mw-collapsed">
'''Running {{project_name_long}} on Apple Silicon'''

For {{project_name_long}} on Apple Silicon, please press on expand on the right.
<div class="mw-collapsible-content">
{{Testers-Only}}

{{mbox
| type    = notice
| image   = [[File:Ambox_notice.png|40px|alt=Info]]
| text    = At time of writing, running {{project_name_long}} on Apple Silicon is still for advanced users only!
}}

{{Box|text=
{{Contributor|
|status=[[Unsupported|Unmaintained]]. Development stalled.
|about=About this For {{project_name_long}} on Apple Silicon Chapter
|difficulty=hard
|contributor=Past: [https://github.com/GavinPacini Gavin Pacini] / Current: none
|support=[https://forums.whonix.org/t/whonix-on-mac-m1-arm/11310 {{project_name_long}} on Mac M1 (ARM)]
}}

'''First things first'''

* Right now, you need to build {{project_name_long}} using the build script to get it running on Apple Silicon.
* This can be improved in the future. If you want to help, please visit [https://forums.whonix.org/t/whonix-on-mac-with-arm-m1/11310 this forum thread].
* Please understand that this is only for advanced users for now!

'''1. Environment Setup'''

* download [https://github.com/utmapp/UTM/releases/latest/download/UTM.dmg UTM] and install

<!-- You may either use a pre-built debian utm image below

* [https://u.pcloud.link/publink/show?code=XZjKj3XZcl0Rcgq2D3jmBwiWWRwYaFjjM4U7 Debian Bullseye UTM image]
*** '''NOTE:'''
**** login: debian
**** password: debian
'''OR''' -->

and follow these instructions to install your own Debian <code>arm64</code> based VM

* [https://cdimage.debian.org/debian-cd/current/arm64/iso-cd/ Download] Debian bullseye netinstall disc image
* open UTM
* click "Create a new virtual machine"
* click "Virtualize"
* click "Linux"
* click "browse" and select the downloaded netinstall image iso file
* and then click "Next"
* on the "Hardware" screen just leave the defaults (4 GB RAM, 4 cores). GPU acceleration is not recommended at this time as it crashes randomly.
* and then click "Next"
* on "Storage" click "Next"
* click "Browse". Choose the directory that you want the built Whonix images to end up in.
* and then click "Next"
* verify settings on the "Summary" page and then click "Save"
* start the new VM and install linux by following the instructions on screen.
* once installation is finished boot into VM again.
* open a terminal and run <code>sudo apt install spice-vdagent spice-webdavd dosfstools</code>
* change VM hostname to <code>host</code>

Double click the Bullseye utm file to import it.

'''2. Initial Build'''

Follow the [[Dev/Build_Documentation/VM| build documentation here]] and be sure to set build parameters:

* <code>--arch arm64</code> and <code>--target utm</code> when running the build script as part of the [[Dev/Build_Documentation/VM#VM_Creation]] step.
* <code>--tb open</code> will result in <code>tb-updater</code> (<code>update-torbrowser</code>) (Tor Browser Downloader by {{project name long}} developers) attempting to download Tor Browser during the build process but fail open (continue the build without error) should the download fail. [https://forums.whonix.org/t/arm64-tor-browser/11806/8 Previously Tor Browser download would fail.] [https://forums.whonix.org/t/arm64-tor-browser/11806/12 This might be fixed by now.] but that is OK as far as the build process is concerned.

Build commands should Look similar to:

{{CodeSelect|code=
~/derivative-maker/derivative-maker --flavor whonix-gateway-xfce --target utm --arch arm64 --build --tb open
}}

{{CodeSelect|code=
~/derivative-maker/derivative-maker --flavor whonix-workstation-xfce --target utm --arch arm64 --build --tb open
}}

Provided you have built correctly, you will now have two <code>.tar.gz</code> files in the <code>~/whonix_binary</code> (they will look something like <code>Whonix-<flavour>-XFCE-{{VersionNew}}.utm.tar.gz</code>), one for the Workstation and one for the Gateway.

* move the .tar.gz files into the shared folder, so they are transferred to your Mac.

'''3. Import utm files'''

* unzip the tar.gz files
* double click each utm file to import it

NOTE: The utm files are completely configured and use special networking. They will work as-is, but feel free to tweak memory, or other settings.
}}
</div>
</div>

{{Box|text=
'''See Also'''
* [[Documentation|Documentation]]
* [[Stay Tuned|Stay Tuned]]
}}

</div>
</div>

{{reflist|close=1}}

</div>
</div>

{{Footer}}

[[Category:Documentation]]