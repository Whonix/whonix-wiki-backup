{{Header}}
{{#seo:
|description={{non_q_project_name_long}} Build Configuration. APT Repository, Onion Sources, APT Cache, VM Settings, Skip Steps, Source Code Changes
|image=Buildconfiguration12354.png
}}
[[File:Buildconfiguration12354.png|thumb]]
{{intro|
{{non_q_project_name_short}} Build Configuration. APT Repository, Onion Sources, APT Cache, VM Settings, Skip Steps, Source Code Changes
}}
=Introduction=

Usually the build configuration does not need to be changed. {{project_name_short}} built from source code comes with safe defaults. The Derivative APT Repository will <b>not</b> be used.

The most interesting build configurations are documented in the following chapters.

If build configurations were used earlier, it might be better to delete the build configuration folder. A few example filenames may have changed since the last build.

{{CodeSelect|code=
sudo rm -r /etc/buildconfig-dist.d
}}

<code>/etc/buildconfig-dist.d</code> is a [[Configuration_Files|modular flexible <code>.d</code> style configuration folder]].

Less popular build configurations are documented in the derivative-maker <code>buildconfig.d</code> folder and on the [[Dev/Source_Code_Intro#Build_Configuration]] page, but it is less user-friendly.

To avoid typos, it is best to copy and paste text when creating build configuration files. Take care that editors do not capitalize variable names which are supposed to be lower case during copy and paste procedures.

Note: All of the following build configuration steps are optional.

=Platforms Choice=
{{Build_Documentation_64bit}}

{{Anchor|repository}}
= Derivative APT Repository=
<div class="toccolours mw-collapsible mw-collapsed">
[[Non-Qubes-Whonix|{{non_q_project_name_short}}]]:<br />
<u>{{project_name_short}} APT Repository</u> is <u>disabled by default</u> <ref>
Since {{project_name_short}} <code>7.3.3</code>
</ref> for <u>builds from source code</u> for reasons of [[Trust]]. Users can decide to update {{project_name_short}} Debian packages by building them from source code (greater security). Alternatively, {{project_name_short}} APT repository can be enabled right after building or after booting the build for the first time (greater convenience) using [[Project-APT-Repository|{{project_name_short}} repository tool]]. To use the latter method which sacrifices security for convenience, click on Expand on the right side.
<div class="mw-collapsible-content">

Do you want to <u>opt-in</u> <u>{{project_name_short}} APT Repository</u>?

The easy way to add {{project_name_short}} <code>stable</code> repository the following command line option can be used.

{{CodeSelect|code=
--repo true
}}

Other settings can be set using an environment variable or [[Dev/Source_Code_Intro#Build_Configuration|build configuration]]. Below are examples using an environment variable.

{{CodeSelect|code=
DERIVATIVE_APT_REPOSITORY_OPTS='--enable --repository stable'
}}
{{CodeSelect|code=
DERIVATIVE_APT_REPOSITORY_OPTS='--enable --repository testers'
}}
{{CodeSelect|code=
DERIVATIVE_APT_REPOSITORY_OPTS='--enable --repository developers'
}}
{{CodeSelect|code=
DERIVATIVE_APT_REPOSITORY_OPTS='--enable --codename {{Stable_project_version_based_on_Debian_codename}}'
}}

Add an environment variable as one normally does on that specific Linux platform. For example, to enable the {{project_name_short}} stable repository during build, you could set <code>DERIVATIVE_APT_REPOSITORY_OPTS</code> by interjecting it between <code>sudo</code> and the <code>./derivative-maker</code> command. Below is an example. Do not use <code>[...]</code>. Replace it with other chosen build parameters (such as <code>--build</code>, <code>--target</code> etc.) after <code>./derivative-maker</code>.

{{CodeSelect|code=
sudo DERIVATIVE_APT_REPOSITORY_OPTS='--enable --repository stable' ./derivative-maker [...]
}}
</div>
</div>

=APT Onion Build Sources=
{{Build Documentation APT Onion Build Sources}}

=Torified or Host APT Cache=
{{Build_Documentation_apt-cache}}

=VM Settings=
{{Build_Documentation_VM_Settings}}

= Build Variables Changes =
{{Build_Documentation_Build_Configuration}}

= Build Variables =
build results binary folder (<code>derivative-binary</code>) | {{CodeSelect|inline=true|code=
binary_build_folder_dist
}} | default: <code>$HOMEVAR/derivative-binary</code>

See [[#Build Variables Changes]] on how to set build variables.

=Skip Steps=
{{Build_Documentation_Skip_Steps}}

=Source Code Changes=
{{Build Documentation Source Code Changes}}

= Footnotes =
{{reflist|close=1}}
[[Category:Documentation]]
[[Category:Development]]
{{Footer}}